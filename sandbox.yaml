# 
# Cluster Config
# 
answers: {}
docker_root_dir: /var/lib/docker
enable_cluster_alerting: false
enable_cluster_monitoring: false
enable_network_policy: false
local_cluster_auth_endpoint:
  ca_certs: |-
    -----BEGIN CERTIFICATE-----
    MIIEZzCCAs+gAwIBAgIJAKFDD5Usix3tMA0GCSqGSIb3DQEBCwUAMFExCzAJBgNV
    BAYTAkZJMREwDwYDVQQHDAhIZWxzaW5raTEVMBMGA1UECgwMRXhhbXBsZSBDb3Jw
    MRgwFgYDVQQDDA9FeGFtcGxlIFJvb3QgQ0EwHhcNMjAwNTE1MTQyMjM1WhcNMzAw
    NTEzMTQyMjM1WjBRMQswCQYDVQQGEwJGSTERMA8GA1UEBwwISGVsc2lua2kxFTAT
    BgNVBAoMDEV4YW1wbGUgQ29ycDEYMBYGA1UEAwwPRXhhbXBsZSBSb290IENBMIIB
    ojANBgkqhkiG9w0BAQEFAAOCAY8AMIIBigKCAYEAvXxoxUw0yxoe5ucBAD2zyvld
    MrfRvfXKRlVPm4MtQmzm/DLS8gQfrRIb5fn+OEXaxrW4sp5H+9CHZBAOTkBnKDpY
    9dQpfJ8+mBmtWBHWm3uwj+umEi3xRmIKJK9pPfOdNwUZqNwMKE6Ygbz8ifUDR4p9
    pRj+R+NFBHtcEBCdoqc3Xe8JiCdgOXJyy4KHGVSxgHXGQldueoi0jDfRey9hnn7g
    WsvIebklfrb/35nvYTLESPnKYm+RoFlsEkeZ6TOEOrxJcQt++2YoA6ujYNACJggS
    qrT8fwzVGWyPojC8wDfqfkIzxioHWSfFOE6AlbC9sl9KiJVBsJMhjOyE/e3UI9lD
    TlsFZAVkCNlJcGl3B4+x2pi30Cc3uGBOsOisZm2IflSURzweXQNnX0OWtO/rxWb1
    dDPsO5K6+EFOFOroDxpJm6VZM/0/s/VlK5cVP3t87Mkh0UQHcISF1Y9tpgu/lEVm
    c/2O/ywGc73rjAjOBXAJlOLIcwWcEL/VksCo+POVAgMBAAGjQjBAMA4GA1UdDwEB
    /wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSy4AReVwcc6D48npzY
    z9fQ1zy/5TANBgkqhkiG9w0BAQsFAAOCAYEAXO8R/2XCEg2ZYpkbXFohCEt+wM8o
    3ToJktC6SnJ6q4/HukvVWBf2oAyfM1S9oDt/g1fqFFfm9nAnZ2c5PxNc5Ke3Gth/
    a57Cd5RbytrpaQTF9NTZMIcmAXMwtuUkLfqugzG5yCDrp7DThbdWE/o9T2MnyvNc
    M7GuhYDZAeHfTHs2uDOVJoHZP+WcLkHEl0UWpZPX9CgQp2n8cBwx6CT2oJexrVYS
    b1SeMsiTSUkfNnp2a1mFWH5TD5RjP/KWwEc/L9xe6ZVDhXj/IqA3dz0DkVLTBL47
    U4CJ1vVfJVPIASHgJN4CG34WZVuXYfwZcUswaQXUfXXhLQ0Pf7kCQEfKooXQXaQ3
    aOfzLEqsNCC7ICME6QA/PX4ZRHwXFUkLLQDsWjmQniKTszEYnorOFRxm2JgVNb2E
    sH/4cn6FSZbAa1+pk6bYnDqQybegeXtvT7Bfhd1JwSejGiVv13AYMJtf5qedB077
    r6M9dseWvzY8vfvBiYJMx8U0lh9vRPwyoOPA
    -----END CERTIFICATE-----
  enabled: true
  fqdn: 172.31.23.220
name: sandbox
# 
# Rancher Config
# 
rancher_kubernetes_engine_config:
  addon_job_timeout: 30
  authentication:
    strategy: x509|webhook
  authorization: {}
  bastion_host:
    ssh_agent_auth: false
  cloud_provider: {}
  dns:
    linear_autoscaler_params: {}
    node_selector: null
    nodelocal:
      ip_address: ''
      node_selector: null
      update_strategy: {}
    reversecidrs: null
    stubdomains: null
    update_strategy: {}
    upstreamnameservers: null
  ignore_docker_version: true
# 
# # Currently only nginx ingress provider is supported.
# # To disable ingress controller, set `provider: none`
# # To enable ingress on specific nodes, use the node_selector, eg:
#    provider: nginx
#    node_selector:
#      app: ingress
# 
  ingress:
    provider: nginx
  kubernetes_version: v1.17.5-rancher1-1
  monitoring:
    provider: metrics-server
    replicas: 1
# 
#   If you are using calico on AWS
# 
#    network:
#      plugin: calico
#      calico_network_provider:
#        cloud_provider: aws
# 
# # To specify flannel interface
# 
#    network:
#      plugin: flannel
#      flannel_network_provider:
#      iface: eth1
# 
# # To specify flannel interface for canal plugin
# 
#    network:
#      plugin: canal
#      canal_network_provider:
#        iface: eth1
# 
  network:
    mtu: 0
    options:
      flannel_backend_type: vxlan
    plugin: flannel
  restore:
    restore: false
# 
#    services:
#      kube-api:
#        service_cluster_ip_range: 10.43.0.0/16
#      kube-controller:
#        cluster_cidr: 10.42.0.0/16
#        service_cluster_ip_range: 10.43.0.0/16
#      kubelet:
#        cluster_domain: cluster.local
#        cluster_dns_server: 10.43.0.10
# 
  services:
    etcd:
      backup_config:
        enabled: true
        interval_hours: 12
        retention: 6
        safe_timestamp: false
      creation: 12h
      extra_args:
        election-timeout: '5000'
        heartbeat-interval: '500'
      gid: 0
      retention: 72h
      snapshot: false
      uid: 0
    kube-api:
      always_pull_images: false
      pod_security_policy: false
      service_node_port_range: 30000-32767
    kube-controller: {}
    kubelet:
      fail_swap_on: false
      generate_serving_certificate: false
    kubeproxy: {}
    scheduler: {}
  ssh_agent_auth: false
  upgrade_strategy:
    drain: false
    max_unavailable_controlplane: '1'
    max_unavailable_worker: 10%%
    node_drain_input:
      delete_local_data: 'false'
      force: false
      grace_period: -1
      ignore_daemon_sets: true
      timeout: 120
scheduled_cluster_scan:
  enabled: false
  scan_config:
    cis_scan_config:
      override_benchmark_version: rke-cis-1.4
      profile: permissive
  schedule_config:
    cron_schedule: 0 0 * * *
    retention: 24

